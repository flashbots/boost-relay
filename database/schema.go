package database

import (
	"github.com/flashbots/mev-boost-relay/common"
)

var (
	tableBase = common.GetEnv("DB_TABLE_PREFIX", "dev")

	TableValidatorRegistration  = tableBase + "_validator_registration"
	TableBidTrace               = tableBase + "_bid_trace"
	TableExecutionPayload       = tableBase + "_execution_payload"
	TableBuilderBlockSubmission = tableBase + "_builder_block_submission"
	TableBid                    = tableBase + "_bid" // ready bids for proposer
	TableDeliveredPayload       = tableBase + "_payload_delivered"
)

var schema = `
CREATE TABLE IF NOT EXISTS ` + TableValidatorRegistration + ` (
	id          bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	inserted_at timestamp NOT NULL default current_timestamp,

	pubkey        varchar(98) NOT NULL UNIQUE,
	fee_recipient varchar(42) NOT NULL,
	timestamp     bigint NOT NULL,
	gas_limit     bigint NOT NULL,
	signature     text NOT NULL
);

CREATE TABLE IF NOT EXISTS ` + TableBidTrace + ` (
	id          bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	inserted_at timestamp NOT NULL default current_timestamp,

	slot        bigint NOT NULL,
	parent_hash varchar(66) NOT NULL,
	block_hash  varchar(66) NOT NULL,

	builder_pubkey         varchar(98) NOT NULL,
	proposer_pubkey        varchar(98) NOT NULL,
	proposer_fee_recipient varchar(42) NOT NULL,

	gas_used   bigint NOT NULL,
	gas_limit  bigint NOT NULL,

	num_tx int NOT NULL,
	value  NUMERIC(48, 0)
);

CREATE TABLE IF NOT EXISTS ` + TableExecutionPayload + ` (
	id          bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	inserted_at timestamp NOT NULL default current_timestamp,

	slot            bigint NOT NULL,
	proposer_pubkey varchar(98) NOT NULL,
	block_hash      varchar(66) NOT NULL,

	version     text NOT NULL, -- bellatrix
	payload 	json NOT NULL
);

CREATE UNIQUE INDEX IF NOT EXISTS ` + TableExecutionPayload + `_slot_pk_hash_idx ON ` + TableExecutionPayload + `(slot, proposer_pubkey, block_hash);

CREATE TABLE IF NOT EXISTS ` + TableBuilderBlockSubmission + ` (
	id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	inserted_at timestamp NOT NULL default current_timestamp,

	-- request data
	signature            text NOT NULL,
	bid_trace_id         bigint references ` + TableBidTrace + `(id),
	execution_payload_id bigint references ` + TableExecutionPayload + `(id) on delete set null,

	-- simulation & verification results
	sim_success boolean NOT NULL,
	sim_error   text    NOT NULL,

	-- other fields taken from BidTrace, for data analytics and normalization
	slot  bigint NOT NULL,
	epoch bigint NOT NULL,

	num_tx         int NOT NULL,
	value          NUMERIC(48, 0),
	block_number   bigint NOT NULL,
	block_hash     varchar(66) NOT NULL,
	parent_hash    varchar(66) NOT NULL,
	builder_pubkey varchar(98) NOT NULL
);

CREATE TABLE IF NOT EXISTS ` + TableBid + ` (
	inserted_at timestamp NOT NULL default current_timestamp,

	slot            bigint NOT NULL,
	parent_hash     varchar(66) NOT NULL,
	proposer_pubkey varchar(98) NOT NULL,

	signed_builder_bid json NOT NULL,

	builder_block_submission bigint references ` + TableBuilderBlockSubmission + `(id),

	PRIMARY KEY(slot, parent_hash, proposer_pubkey)
);

CREATE TABLE IF NOT EXISTS ` + TableDeliveredPayload + ` (
	id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	inserted_at timestamp NOT NULL default current_timestamp,

	epoch bigint NOT NULL,
	slot  bigint NOT NULL,

	builder_pubkey         varchar(98) NOT NULL,
	proposer_pubkey        varchar(98) NOT NULL,
	proposer_fee_recipient varchar(42) NOT NULL,

	parent_hash  varchar(66) NOT NULL,
	block_hash   varchar(66) NOT NULL,
	block_number bigint NOT NULL,
	num_tx       int NOT NULL,
	value        NUMERIC(48, 0),

	gas_used  bigint NOT NULL,
	gas_limit bigint NOT NULL,

	execution_payload     json NOT NULL,
	bid_trace             json NOT NULL,
	bid_trace_builder_sig text NOT NULL,
	signed_builder_bid    json NOT NULL,
	signed_blinded_beacon_block json NOT NULL,

	UNIQUE (slot, proposer_pubkey, block_hash)
);

CREATE INDEX IF NOT EXISTS ` + TableDeliveredPayload + `_slot_idx ON ` + TableDeliveredPayload + `("slot");
CREATE INDEX IF NOT EXISTS ` + TableDeliveredPayload + `_blockhash_idx ON ` + TableDeliveredPayload + `("block_hash");
`
