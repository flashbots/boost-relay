package migrations

import (
	"github.com/flashbots/mev-boost-relay/database"
	migrate "github.com/rubenv/sql-migrate"
)

func GetInitDatabase() *migrate.Migration {
	return &migrate.Migration{
		Id: "001-init-database",
		Up: []string{`
		CREATE TABLE IF NOT EXISTS ` + database.TableValidatorRegistration + ` (
			id          bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
			inserted_at timestamp NOT NULL default current_timestamp,
		
			pubkey        varchar(98) NOT NULL,
			fee_recipient varchar(42) NOT NULL,
			timestamp     bigint NOT NULL,
			gas_limit     bigint NOT NULL,
			signature     text NOT NULL
		);
		
		CREATE UNIQUE INDEX IF NOT EXISTS ` + database.TableValidatorRegistration + `_pubkey_timestamp_uidx ON ` + database.TableValidatorRegistration + `(pubkey, timestamp DESC);
		
		
		CREATE TABLE IF NOT EXISTS ` + database.TableExecutionPayload + ` (
			id          bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
			inserted_at timestamp NOT NULL default current_timestamp,
		
			slot            bigint NOT NULL,
			proposer_pubkey varchar(98) NOT NULL,
			block_hash      varchar(66) NOT NULL,
		
			version     text NOT NULL, -- bellatrix
			payload 	json NOT NULL
		);
		
		CREATE UNIQUE INDEX IF NOT EXISTS ` + database.TableExecutionPayload + `_slot_pk_hash_idx ON ` + database.TableExecutionPayload + `(slot, proposer_pubkey, block_hash);
		
		
		CREATE TABLE IF NOT EXISTS ` + database.TableBuilderBlockSubmission + ` (
			id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
			inserted_at timestamp NOT NULL default current_timestamp,
		
			execution_payload_id bigint,
		
			-- simulation & verification results
			sim_success boolean NOT NULL,
			sim_error   text    NOT NULL,
		
			-- bidtrace data
			signature            text NOT NULL,
		
			slot        bigint NOT NULL,
			parent_hash varchar(66) NOT NULL,
			block_hash  varchar(66) NOT NULL,
		
			builder_pubkey         varchar(98) NOT NULL,
			proposer_pubkey        varchar(98) NOT NULL,
			proposer_fee_recipient varchar(42) NOT NULL,
		
			gas_used   bigint NOT NULL,
			gas_limit  bigint NOT NULL,
		
			num_tx int NOT NULL,
			value  NUMERIC(48, 0),
		
			-- helpers
			epoch        bigint NOT NULL,
			block_number bigint NOT NULL,
			was_most_profitable boolean NOT NULL
		);
		
		CREATE INDEX IF NOT EXISTS ` + database.TableBuilderBlockSubmission + `_slot_idx ON ` + database.TableBuilderBlockSubmission + `("slot");
		CREATE INDEX IF NOT EXISTS ` + database.TableBuilderBlockSubmission + `_blockhash_idx ON ` + database.TableBuilderBlockSubmission + `("block_hash");
		CREATE INDEX IF NOT EXISTS ` + database.TableBuilderBlockSubmission + `_blocknumber_idx ON ` + database.TableBuilderBlockSubmission + `("block_number");
		CREATE INDEX IF NOT EXISTS ` + database.TableBuilderBlockSubmission + `_builderpubkey_idx ON ` + database.TableBuilderBlockSubmission + `("builder_pubkey");
		CREATE INDEX IF NOT EXISTS ` + database.TableBuilderBlockSubmission + `_simsuccess_idx ON ` + database.TableBuilderBlockSubmission + `("sim_success");
		CREATE INDEX IF NOT EXISTS ` + database.TableBuilderBlockSubmission + `_mostprofit_idx ON ` + database.TableBuilderBlockSubmission + `("was_most_profitable");
		CREATE INDEX IF NOT EXISTS ` + database.TableBuilderBlockSubmission + `_executionpayloadid_idx ON ` + database.TableBuilderBlockSubmission + `("execution_payload_id");
		
		
		CREATE TABLE IF NOT EXISTS ` + database.TableDeliveredPayload + ` (
			id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
			inserted_at timestamp NOT NULL default current_timestamp,
		
			signed_blinded_beacon_block json,
		
			epoch bigint NOT NULL,
			slot  bigint NOT NULL,
		
			builder_pubkey         varchar(98) NOT NULL,
			proposer_pubkey        varchar(98) NOT NULL,
			proposer_fee_recipient varchar(42) NOT NULL,
		
			parent_hash  varchar(66) NOT NULL,
			block_hash   varchar(66) NOT NULL,
			block_number bigint NOT NULL,
		
			gas_used  bigint NOT NULL,
			gas_limit bigint NOT NULL,
		
			num_tx  int NOT NULL,
			value   NUMERIC(48, 0),
		
			UNIQUE (slot, proposer_pubkey, block_hash)
		);
		
		CREATE INDEX IF NOT EXISTS ` + database.TableDeliveredPayload + `_slot_idx ON ` + database.TableDeliveredPayload + `("slot");
		CREATE INDEX IF NOT EXISTS ` + database.TableDeliveredPayload + `_blockhash_idx ON ` + database.TableDeliveredPayload + `("block_hash");
		CREATE INDEX IF NOT EXISTS ` + database.TableDeliveredPayload + `_blocknumber_idx ON ` + database.TableDeliveredPayload + `("block_number");
		CREATE INDEX IF NOT EXISTS ` + database.TableDeliveredPayload + `_proposerpubkey_idx ON ` + database.TableDeliveredPayload + `("proposer_pubkey");
		CREATE INDEX IF NOT EXISTS ` + database.TableDeliveredPayload + `_builderpubkey_idx ON ` + database.TableDeliveredPayload + `("builder_pubkey");
		CREATE INDEX IF NOT EXISTS ` + database.TableDeliveredPayload + `_value_idx ON ` + database.TableDeliveredPayload + `("value");
		
		
		CREATE TABLE IF NOT EXISTS ` + database.TableBlockBuilder + ` (
			id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
			inserted_at timestamp NOT NULL default current_timestamp,
		
			builder_pubkey  varchar(98) NOT NULL,
			description    	text NOT NULL,
		
			is_high_prio    boolean NOT NULL,
			is_blacklisted  boolean NOT NULL,
		
			last_submission_id   bigint references ` + database.TableBuilderBlockSubmission + `(id) on delete set null,
			last_submission_slot bigint NOT NULL,
		
			num_submissions_total    bigint NOT NULL,
			num_submissions_simerror bigint NOT NULL,
			num_submissions_topbid   bigint NOT NULL,
		
			num_sent_getpayload bigint NOT NULL DEFAULT 0,
		
			UNIQUE (builder_pubkey)
		);
		`},
		Down: []string{`
		DROP TABLE IF EXISTS ` + database.TableBuilderBlockSubmission + `;
		DROP TABLE IF EXISTS ` + database.TableDeliveredPayload + `;
		DROP TABLE IF EXISTS ` + database.TableBlockBuilder + `;
		DROP TABLE IF EXISTS ` + database.TableExecutionPayload + `;
		DROP TABLE IF EXISTS ` + database.TableValidatorRegistration + `;
		`},
		DisableTransactionUp:   false,
		DisableTransactionDown: false,
	}
}
